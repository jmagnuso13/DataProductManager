{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'oauth2client'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-1-a27701399b76>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mapiclient\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdiscovery\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mhttplib2\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mHttp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0moauth2client\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0moauth2client\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mfile\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mclient\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtools\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mlambda\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'oauth2client'"
     ]
    }
   ],
   "source": [
    "from apiclient import discovery\n",
    "from httplib2 import Http\n",
    "import oauth2client\n",
    "from oauth2client import file, client, tools\n",
    "obj = lambda: None\n",
    "lmao = {\"auth_host_name\":'localhost', 'noauth_local_webserver':'store_true', 'auth_host_port':[8080, 8090], 'logging_level':'ERROR'}\n",
    "for k, v in lmao.items():\n",
    "    setattr(obj, k, v)\n",
    "    \n",
    "# authorization boilerplate code\n",
    "SCOPES = 'https://www.googleapis.com/auth/drive.readonly'\n",
    "store = file.Storage('token.json')\n",
    "creds = store.get()\n",
    "# The following will give you a link if token.json does not exist, the link allows the user to give this app permission\n",
    "if not creds or creds.invalid:\n",
    "    flow = client.flow_from_clientsecrets('client_id.json', SCOPES)\n",
    "    creds = tools.run_flow(flow, store, obj)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting gspread\n",
      "  Downloading gspread-3.6.0-py3-none-any.whl (26 kB)\n",
      "Collecting oauth2client\n",
      "  Downloading oauth2client-4.1.3-py2.py3-none-any.whl (98 kB)\n",
      "\u001b[K     |████████████████████████████████| 98 kB 7.9 MB/s eta 0:00:011\n",
      "\u001b[?25hCollecting df2gspread\n",
      "  Downloading df2gspread-1.0.4.tar.gz (11 kB)\n",
      "Requirement already satisfied: google-auth-oauthlib>=0.4.1 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from gspread) (0.4.2)\n",
      "Requirement already satisfied: requests>=2.2.1 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from gspread) (2.24.0)\n",
      "Requirement already satisfied: google-auth>=1.12.0 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from gspread) (1.22.1)\n",
      "Requirement already satisfied: rsa>=3.1.4 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from oauth2client) (4.6)\n",
      "Requirement already satisfied: pyasn1-modules>=0.0.5 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from oauth2client) (0.2.8)\n",
      "Requirement already satisfied: httplib2>=0.9.1 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from oauth2client) (0.18.1)\n",
      "Requirement already satisfied: six>=1.6.1 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from oauth2client) (1.15.0)\n",
      "Requirement already satisfied: pyasn1>=0.1.7 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from oauth2client) (0.4.8)\n",
      "Collecting argparse>=1.3.0\n",
      "  Downloading argparse-1.4.0-py2.py3-none-any.whl (23 kB)\n",
      "Collecting google-api-python-client==1.6.7\n",
      "  Downloading google_api_python_client-1.6.7-py2.py3-none-any.whl (56 kB)\n",
      "\u001b[K     |████████████████████████████████| 56 kB 7.7 MB/s  eta 0:00:01\n",
      "\u001b[?25hRequirement already satisfied: pandas in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from df2gspread) (1.0.5)\n",
      "Requirement already satisfied: requests-oauthlib>=0.7.0 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from google-auth-oauthlib>=0.4.1->gspread) (1.3.0)\n",
      "Requirement already satisfied: chardet<4,>=3.0.2 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from requests>=2.2.1->gspread) (3.0.4)\n",
      "Requirement already satisfied: idna<3,>=2.5 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from requests>=2.2.1->gspread) (2.10)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from requests>=2.2.1->gspread) (2020.6.20)\n",
      "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from requests>=2.2.1->gspread) (1.25.9)\n",
      "Requirement already satisfied: cachetools<5.0,>=2.0.0 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from google-auth>=1.12.0->gspread) (4.1.1)\n",
      "Requirement already satisfied: setuptools>=40.3.0 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from google-auth>=1.12.0->gspread) (49.2.0.post20200714)\n",
      "Requirement already satisfied: uritemplate<4dev,>=3.0.0 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from google-api-python-client==1.6.7->df2gspread) (3.0.1)\n",
      "Requirement already satisfied: pytz>=2017.2 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from pandas->df2gspread) (2020.1)\n",
      "Requirement already satisfied: numpy>=1.13.3 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from pandas->df2gspread) (1.18.5)\n",
      "Requirement already satisfied: python-dateutil>=2.6.1 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from pandas->df2gspread) (2.8.1)\n",
      "Requirement already satisfied: oauthlib>=3.0.0 in /Users/jmagnus/opt/anaconda3/lib/python3.8/site-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib>=0.4.1->gspread) (3.1.0)\n",
      "Building wheels for collected packages: df2gspread\n",
      "  Building wheel for df2gspread (setup.py) ... \u001b[?25ldone\n",
      "\u001b[?25h  Created wheel for df2gspread: filename=df2gspread-1.0.4-py3-none-any.whl size=11953 sha256=5bd0d4244e4ea2dcccd869cc802161cd25f332096b51c21366f529ebfaa24b2b\n",
      "  Stored in directory: /Users/jmagnus/Library/Caches/pip/wheels/53/32/9b/26e210feef010738b204c7e12454b1ce9576957f66ca64456d\n",
      "Successfully built df2gspread\n",
      "Installing collected packages: gspread, oauth2client, argparse, google-api-python-client, df2gspread\n",
      "  Attempting uninstall: google-api-python-client\n",
      "    Found existing installation: google-api-python-client 1.12.5\n",
      "    Uninstalling google-api-python-client-1.12.5:\n",
      "      Successfully uninstalled google-api-python-client-1.12.5\n",
      "Successfully installed argparse-1.4.0 df2gspread-1.0.4 google-api-python-client-1.6.7 gspread-3.6.0 oauth2client-4.1.3\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install gspread oauth2client df2gspread"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Importing the module\n",
    "import gspread\n",
    "from df2gspread import df2gspread as d2g\n",
    "from oauth2client.service_account import ServiceAccountCredentials"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "#The scope is always look like this so we did not need to change anything\n",
    "scope = [\n",
    "   'https://spreadsheets.google.com/feeds',\n",
    "         'https://www.googleapis.com/auth/drive']\n",
    "#Name of our Service Account Key\n",
    "google_key_file = 'learned-acolyte-293719-ba2885f66dfc.json'\n",
    "credentials = ServiceAccountCredentials.from_json_keyfile_name(google_key_file, scope)\n",
    "gc = gspread.authorize(credentials)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "#I would use tips dataset as an example\n",
    "tips = sns.load_dataset('tips')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>total_bill</th>\n",
       "      <th>tip</th>\n",
       "      <th>sex</th>\n",
       "      <th>smoker</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "      <th>size</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16.99</td>\n",
       "      <td>1.01</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>Sun</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10.34</td>\n",
       "      <td>1.66</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>Sun</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21.01</td>\n",
       "      <td>3.50</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>Sun</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>23.68</td>\n",
       "      <td>3.31</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>Sun</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24.59</td>\n",
       "      <td>3.61</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>Sun</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   total_bill   tip     sex smoker  day    time  size\n",
       "0       16.99  1.01  Female     No  Sun  Dinner     2\n",
       "1       10.34  1.66    Male     No  Sun  Dinner     3\n",
       "2       21.01  3.50    Male     No  Sun  Dinner     3\n",
       "3       23.68  3.31    Male     No  Sun  Dinner     2\n",
       "4       24.59  3.61  Female     No  Sun  Dinner     4"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tips.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Worksheet 'Sheet1' id:0>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "#This is the Worksheet ID, which I retrieve from the url see https://docs.google.com/spreadsheets/d/1g4MMvO8sxc8AqT8xbFmFp3Wf7TVDSgi25ttzb6qYYbo/edit#gid=0)\n",
    "spreadsheet_key = \"1g4MMvO8sxc8AqT8xbFmFp3Wf7TVDSgi25ttzb6qYYbo\"\n",
    "#This is the sheet name\n",
    "wks_name = 'Sheet1'\n",
    "#We upload the tips data to our Google Sheet. Setting the row_names to False if you did not want the index to be included\n",
    "d2g.upload(tips, spreadsheet_key, wks_name, credentials=credentials, row_names=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>county_fips_code</th>\n",
       "      <th>county_name</th>\n",
       "      <th>state</th>\n",
       "      <th>state_fips_code</th>\n",
       "      <th>_1_22_20</th>\n",
       "      <th>_1_23_20</th>\n",
       "      <th>_1_24_20</th>\n",
       "      <th>_1_25_20</th>\n",
       "      <th>_1_26_20</th>\n",
       "      <th>_1_27_20</th>\n",
       "      <th>...</th>\n",
       "      <th>_10_18_20</th>\n",
       "      <th>_10_19_20</th>\n",
       "      <th>_10_20_20</th>\n",
       "      <th>_10_21_20</th>\n",
       "      <th>_10_22_20</th>\n",
       "      <th>_10_23_20</th>\n",
       "      <th>_10_24_20</th>\n",
       "      <th>_10_25_20</th>\n",
       "      <th>_10_26_20</th>\n",
       "      <th>_10_27_20</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1003</td>\n",
       "      <td>Baldwin County</td>\n",
       "      <td>AL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>6369</td>\n",
       "      <td>6375</td>\n",
       "      <td>6405</td>\n",
       "      <td>6443</td>\n",
       "      <td>6475</td>\n",
       "      <td>6615</td>\n",
       "      <td>6637</td>\n",
       "      <td>6658</td>\n",
       "      <td>6694</td>\n",
       "      <td>6712</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1015</td>\n",
       "      <td>Calhoun County</td>\n",
       "      <td>AL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>4084</td>\n",
       "      <td>4102</td>\n",
       "      <td>4127</td>\n",
       "      <td>4160</td>\n",
       "      <td>4189</td>\n",
       "      <td>4224</td>\n",
       "      <td>4567</td>\n",
       "      <td>4599</td>\n",
       "      <td>4621</td>\n",
       "      <td>4647</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1017</td>\n",
       "      <td>Chambers County</td>\n",
       "      <td>AL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1266</td>\n",
       "      <td>1273</td>\n",
       "      <td>1301</td>\n",
       "      <td>1330</td>\n",
       "      <td>1336</td>\n",
       "      <td>1343</td>\n",
       "      <td>1350</td>\n",
       "      <td>1350</td>\n",
       "      <td>1352</td>\n",
       "      <td>1368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1021</td>\n",
       "      <td>Chilton County</td>\n",
       "      <td>AL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1787</td>\n",
       "      <td>1805</td>\n",
       "      <td>1817</td>\n",
       "      <td>1826</td>\n",
       "      <td>1841</td>\n",
       "      <td>1858</td>\n",
       "      <td>1869</td>\n",
       "      <td>1884</td>\n",
       "      <td>1893</td>\n",
       "      <td>1904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1031</td>\n",
       "      <td>Coffee County</td>\n",
       "      <td>AL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1629</td>\n",
       "      <td>1640</td>\n",
       "      <td>1666</td>\n",
       "      <td>1682</td>\n",
       "      <td>1717</td>\n",
       "      <td>1732</td>\n",
       "      <td>1763</td>\n",
       "      <td>1771</td>\n",
       "      <td>1795</td>\n",
       "      <td>1807</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 284 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  county_fips_code      county_name state state_fips_code _1_22_20 _1_23_20  \\\n",
       "0             1003   Baldwin County    AL               1        0        0   \n",
       "1             1015   Calhoun County    AL               1        0        0   \n",
       "2             1017  Chambers County    AL               1        0        0   \n",
       "3             1021   Chilton County    AL               1        0        0   \n",
       "4             1031    Coffee County    AL               1        0        0   \n",
       "\n",
       "  _1_24_20 _1_25_20 _1_26_20 _1_27_20  ... _10_18_20 _10_19_20 _10_20_20  \\\n",
       "0        0        0        0        0  ...      6369      6375      6405   \n",
       "1        0        0        0        0  ...      4084      4102      4127   \n",
       "2        0        0        0        0  ...      1266      1273      1301   \n",
       "3        0        0        0        0  ...      1787      1805      1817   \n",
       "4        0        0        0        0  ...      1629      1640      1666   \n",
       "\n",
       "  _10_21_20 _10_22_20 _10_23_20 _10_24_20 _10_25_20 _10_26_20 _10_27_20  \n",
       "0      6443      6475      6615      6637      6658      6694      6712  \n",
       "1      4160      4189      4224      4567      4599      4621      4647  \n",
       "2      1330      1336      1343      1350      1350      1352      1368  \n",
       "3      1826      1841      1858      1869      1884      1893      1904  \n",
       "4      1682      1717      1732      1763      1771      1795      1807  \n",
       "\n",
       "[5 rows x 284 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "spreadsheet_key2 = '174pLkzz77eK9etF6qfWUzAFdE68plp4UtYkuefVPTxw'\n",
    "wks_name2 = 'covid_cases'\n",
    "#Opening the worksheet by using Worksheet ID\n",
    "workbook = gc.open_by_key(spreadsheet_key2)\n",
    "#Selecting which sheet to pulling the data\n",
    "sheet = workbook.worksheet(wks_name2)\n",
    "#Pulling the data and transform it to the data frame\n",
    "df = sheet.get_all_values()\n",
    "covid = pd.DataFrame(df[1:], columns = df[0])\n",
    "covid.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>county_fips_code</th>\n",
       "      <th>county_name</th>\n",
       "      <th>state</th>\n",
       "      <th>state_fips_code</th>\n",
       "      <th>_1_22_20</th>\n",
       "      <th>_1_23_20</th>\n",
       "      <th>_1_24_20</th>\n",
       "      <th>_1_25_20</th>\n",
       "      <th>_1_26_20</th>\n",
       "      <th>_1_27_20</th>\n",
       "      <th>...</th>\n",
       "      <th>_10_18_20</th>\n",
       "      <th>_10_19_20</th>\n",
       "      <th>_10_20_20</th>\n",
       "      <th>_10_21_20</th>\n",
       "      <th>_10_22_20</th>\n",
       "      <th>_10_23_20</th>\n",
       "      <th>_10_24_20</th>\n",
       "      <th>_10_25_20</th>\n",
       "      <th>_10_26_20</th>\n",
       "      <th>_10_27_20</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "      <td>...</td>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "      <td>3195</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>3146</td>\n",
       "      <td>1882</td>\n",
       "      <td>51</td>\n",
       "      <td>51</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1768</td>\n",
       "      <td>1768</td>\n",
       "      <td>1785</td>\n",
       "      <td>1815</td>\n",
       "      <td>1800</td>\n",
       "      <td>1834</td>\n",
       "      <td>1808</td>\n",
       "      <td>1809</td>\n",
       "      <td>1857</td>\n",
       "      <td>1860</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>0</td>\n",
       "      <td>Statewide Unallocated</td>\n",
       "      <td>TX</td>\n",
       "      <td>48</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>50</td>\n",
       "      <td>50</td>\n",
       "      <td>255</td>\n",
       "      <td>255</td>\n",
       "      <td>3194</td>\n",
       "      <td>3194</td>\n",
       "      <td>3193</td>\n",
       "      <td>3193</td>\n",
       "      <td>3190</td>\n",
       "      <td>3189</td>\n",
       "      <td>...</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>27</td>\n",
       "      <td>28</td>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4 rows × 284 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       county_fips_code            county_name state state_fips_code _1_22_20  \\\n",
       "count              3195                   3195  3195            3195     3195   \n",
       "unique             3146                   1882    51              51        2   \n",
       "top                   0  Statewide Unallocated    TX              48        0   \n",
       "freq                 50                     50   255             255     3194   \n",
       "\n",
       "       _1_23_20 _1_24_20 _1_25_20 _1_26_20 _1_27_20  ... _10_18_20 _10_19_20  \\\n",
       "count      3195     3195     3195     3195     3195  ...      3195      3195   \n",
       "unique        2        2        2        2        2  ...      1768      1768   \n",
       "top           0        0        0        0        0  ...         0         0   \n",
       "freq       3194     3193     3193     3190     3189  ...        28        28   \n",
       "\n",
       "       _10_20_20 _10_21_20 _10_22_20 _10_23_20 _10_24_20 _10_25_20 _10_26_20  \\\n",
       "count       3195      3195      3195      3195      3195      3195      3195   \n",
       "unique      1785      1815      1800      1834      1808      1809      1857   \n",
       "top            0         0         0         0         0         0         0   \n",
       "freq          28        28        28        27        28        29        29   \n",
       "\n",
       "       _10_27_20  \n",
       "count       3195  \n",
       "unique      1860  \n",
       "top            0  \n",
       "freq          28  \n",
       "\n",
       "[4 rows x 284 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "covid.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
